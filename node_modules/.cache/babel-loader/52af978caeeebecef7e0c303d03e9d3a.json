{"ast":null,"code":"var _jsxFileName = \"/Users/vbarsott/Desktop/react/01-react-examples/theme-switcher/switch-root-css/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './styles/css/styles.css';\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ThemesOptions from './components/ThemesOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [themeSelected, setThemeSelected] = useState('orange');\n  const [themesOptions, setThemesOptions] = useState({\n    id: 1,\n    themeName: 'Blue',\n    themeValue: 'blue'\n  }, {\n    id: 2,\n    themeName: 'Orange',\n    themeValue: 'orange'\n  });\n  const {\n    themeValue\n  } = themesOptions;\n\n  const handleThemeChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name, value);\n    setThemeSelected(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-theme\": themeValue,\n      className: \"app-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"pb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"fontStyle\",\n              children: \"Them Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"themes-options\",\n              name: \"theme-option\",\n              value: themeSelected,\n              onChange: handleThemeChange,\n              children: themesOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"UCxJEuqsHBa2UWAZR5CNC3oe7xY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vbarsott/Desktop/react/01-react-examples/theme-switcher/switch-root-css/src/App.js"],"names":["useState","Header","Footer","ThemesOptions","App","themeSelected","setThemeSelected","themesOptions","setThemesOptions","id","themeName","themeValue","handleThemeChange","e","name","value","target","console","log","map","option"],"mappings":";;;AAAA,OAAO,yBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,QAAD,CAAlD;AAEA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAChD;AAAES,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,MAApB;AAA4BC,IAAAA,UAAU,EAAE;AAAxC,GADgD,EAEhD;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,SAAS,EAAE,QAApB;AAA8BC,IAAAA,UAAU,EAAE;AAA1C,GAFgD,CAAlD;AAKA,QAAM;AAAEA,IAAAA;AAAF,MAAiBJ,aAAvB;;AAEA,QAAMK,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB;AACAT,IAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACD,GAJD;;AAMA,sBACE;AAAA,2BACE;AAAK,oBAAYJ,UAAjB;AAA6B,MAAA,SAAS,EAAC,aAAvC;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAA,iCACE;AAAS,YAAA,SAAS,EAAC,MAAnB;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,IAAI,EAAC,cAFP;AAGE,cAAA,KAAK,EAAEN,aAHT;AAIE,cAAA,QAAQ,EAAEO,iBAJZ;AAAA,wBAWGL,aAAa,CAACY,GAAd,CAAmBC,MAAD,iBACjB;AAAQ,gBAAA,KAAK,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,sBADD;AAXH;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eA+BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqCD;;GArDQhB,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import './styles/css/styles.css';\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ThemesOptions from './components/ThemesOptions';\n\nfunction App() {\n  const [themeSelected, setThemeSelected] = useState('orange');\n\n  const [themesOptions, setThemesOptions] = useState(\n    { id: 1, themeName: 'Blue', themeValue: 'blue' },\n    { id: 2, themeName: 'Orange', themeValue: 'orange' }\n  );\n\n  const { themeValue } = themesOptions;\n\n  const handleThemeChange = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value);\n    setThemeSelected(value);\n  };\n\n  return (\n    <>\n      <div data-theme={themeValue} className='app-wrapper'>\n        <Header />\n\n        <div className='main-wrapper'>\n          <main>\n            <section className='pb-2'>\n              <h2 className='fontStyle'>Them Options</h2>\n              {/* <ThemesOptions\n                themesOptions={themesOptions}\n                themeSelected={themeSelected}\n                handleThemeChange={handleThemeChange}\n              /> */}\n              <select\n                id='themes-options'\n                name='theme-option'\n                value={themeSelected}\n                onChange={handleThemeChange}>\n                {/* {themesOptions.map((to) => (\n                  <option key={to.id} value={to.themeValue}>\n                    {to.themeName}\n                  </option>\n                ))} */}\n\n                {themesOptions.map((option) => (\n                  <option value={option}></option>\n                ))}\n              </select>\n            </section>\n          </main>\n        </div>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}